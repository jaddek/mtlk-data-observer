services:
    express:
        container_name: cli
        build: api
        volumes:
            - ./cli:/usr/src/app
            - /usr/src/app/node_modules
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
        depends_on:
            - mongodb
        networks:
            - mtlk-network


    mongodb:
        image: mongo:8.0.0
        container_name: mongodb
        ports:
            - "27017:27017"
        volumes:
            - mongo_data:/data/db
            - ./cli/bin/mongo-init:/docker-entrypoint-initdb.d
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        networks:
            - mtlk-network

#
#    kafka:
#        image: bitnami/kafka:3.6
#        container_name: kafka
#        ports:
#            - "9092:9092"
#        environment:
#            - KAFKA_ENABLE_KRAFT=yes
#            - KAFKA_CFG_PROCESS_ROLES=broker,controller
#            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#            - KAFKA_BROKER_ID=1
#            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
#            - ALLOW_PLAINTEXT_LISTENER=yes
#            - KAFKA_CFG_NODE_ID=1
#            - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
#        networks:
#            - mtlk-network
#
#    kafka-ui:
#        container_name: kafka-ui
#        image: provectuslabs/kafka-ui:v0.7.2
#        ports:
#            - 8080:8080
#        environment:
#            DYNAMIC_CONFIG_ENABLED: 'true'
#        volumes:
#            - ./kafka/ui-config.yaml:/etc/kafkaui/dynamic_config.yaml
#        networks:
#            - mtlk-network

networks:
    mtlk-network:
        driver: bridge

volumes:
    mongo_data:
    kafka-data:
